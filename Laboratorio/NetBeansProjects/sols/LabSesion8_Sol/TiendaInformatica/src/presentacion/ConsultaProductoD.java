package presentacion;

import logica.Ordenador;
import logica.Telefono;
import logica.UtilTienda;
import logica.Producto;
import java.awt.HeadlessException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JOptionPane;

public class ConsultaProductoD extends javax.swing.JDialog {

    private ArrayList<Producto> proaux; //Referencia al ArrayList de productos de la clase UtilTienda
    private ListIterator<Producto> li; //Iterador para recorrer el ArrayList en ambas direcciones
    private Producto objpro;
    /**
     * Creates new form ConsultaProductoD
     * @param parent la ventana principal
     * @param modal true para que solo podamos operar con esta ventana
     */
    public ConsultaProductoD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        panelDatos.desactivaCodigo();
        consultarTodo();
        this.setVisible(true);
    }

    /** Consulta los productos del ArrayList ordenadas para su presentación */
    private void consultarTodo() {
        try {
            //referenciamos al ArrayList de UtilTienda
            proaux = UtilTienda.getProductos();
            //creamos el iterador sobre el ArrayList
            li = proaux.listIterator();
            //si no hay productos...
            if (proaux.size() < 1) {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                jButtonSig.setEnabled(false);
                jButtonAnt.setEnabled(false);
                jButtonBaja.setEnabled(false);
                jButtonModf.setEnabled(false);
                jButtonCompra.setEnabled(false);
                jButtonReponer.setEnabled(false);
                return;
            } else {
                jButtonSig.setEnabled(true);
                jButtonAnt.setEnabled(true);
                jButtonBaja.setEnabled(true);
                jButtonModf.setEnabled(true);
                jButtonCompra.setEnabled(true);
                jButtonReponer.setEnabled(true);
            }
            //presentamos 
            if (li.hasNext()) {
                objpro = li.next();
            }
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error: " + e.toString());
        }
    }//fin consultarTodo

    /** Presenta los datos de un producto en el panel de datos */
    private void presenta(Producto pro) {
        String tipo = pro.getClass().getSimpleName();
        panelDatos.setJTextFieldCodigo(pro.getCodigo());
        panelDatos.setJTextFieldNombre(pro.getNombre());
        panelDatos.setJTextFieldPrecio(pro.getPrecio() + "");
        panelDatos.setJTextFieldCantidad(pro.getCantidad() + "");

        if (tipo.equals("Ordenador")) {
            Ordenador ord = (Ordenador) pro;
            panelDatos.setLabelVar("Características");
            panelDatos.setJTextFieldVar(ord.getCaracteristicas());
        } else {
            Telefono tel = (Telefono) pro;
            panelDatos.setLabelVar("Operador");
            panelDatos.setJTextFieldVar(tel.getOperador());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonSig = new javax.swing.JButton();
        jButtonAnt = new javax.swing.JButton();
        jButtonBaja = new javax.swing.JButton();
        jButtonReponer = new javax.swing.JButton();
        jTextFieldCant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonCompra = new javax.swing.JButton();
        jButtonModf = new javax.swing.JButton();
        panelDatos = new presentacion.PanelDatos();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultas");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("CONSULTA PRODUCTOS");

        jButtonSig.setText("SIGUIENTE");
        jButtonSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSigActionPerformed(evt);
            }
        });

        jButtonAnt.setText("ANTERIOR");
        jButtonAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAntActionPerformed(evt);
            }
        });

        jButtonBaja.setText("BAJA");
        jButtonBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBajaActionPerformed(evt);
            }
        });

        jButtonReponer.setText("REPONER");
        jButtonReponer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReponerActionPerformed(evt);
            }
        });

        jLabel2.setText("Cantidad");

        jButtonCompra.setText("COMPRAR");
        jButtonCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompraActionPerformed(evt);
            }
        });

        jButtonModf.setText("MODIFICAR");
        jButtonModf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModfActionPerformed(evt);
            }
        });

        panelDatos.setBackground(new java.awt.Color(0, 153, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(117, 117, 117))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSig)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                        .addComponent(jButtonAnt))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonModf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldCant, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonBaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonReponer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSig)
                    .addComponent(jButtonAnt))
                .addGap(18, 18, 18)
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModf)
                    .addComponent(jButtonBaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCompra)
                    .addComponent(jButtonReponer)
                    .addComponent(jTextFieldCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSigActionPerformed
        // TODO add your handling code here:
        //Comprobamos el rango del ArrayList...
        if (li.hasNext()) {
            objpro = li.next();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonSigActionPerformed

    private void jButtonAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAntActionPerformed
        // TODO add your handling code here:
        //Comprobamos el rango del ArrayList...
        if (li.hasPrevious()) {
            objpro = li.previous();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAntActionPerformed

    private void jButtonBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBajaActionPerformed
        // TODO add your handling code here:
        if (objpro != null) {
            li.remove();
            JOptionPane.showMessageDialog(this, "Producto dado de baja: " + objpro.toString(), "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, " Error: - Producto no encontrado -", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        //mostramos el elemento siguiente o anterior
        if (li.hasNext()) {
            objpro = li.next();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (li.hasPrevious()) {
            objpro = li.previous();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonBajaActionPerformed

    private void jButtonReponerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReponerActionPerformed
        // TODO add your handling code here:
        try {
            int cantidad = Integer.parseInt(jTextFieldCant.getText());
            int stock = objpro.getCantidad();
            String tipo = objpro.getClass().getSimpleName();
            objpro.setCantidad(cantidad + stock);
            JOptionPane.showMessageDialog(this, "Ahora hay " + objpro.getCantidad() + " unidades.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            presenta(objpro);
            if (cantidad < 0) {
                JOptionPane.showMessageDialog(this, "No introduzca valores negativos", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al comprar: " + e.toString(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonReponerActionPerformed

    private void jButtonCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompraActionPerformed
        // TODO add your handling code here:
        try {
            int cantidad = Integer.parseInt(jTextFieldCant.getText());
            int stock = objpro.getCantidad();

            if (cantidad < 0) {
                JOptionPane.showMessageDialog(this, "No introduzca valores negativos.", "Mensaje", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (stock >= cantidad) {
                objpro.setCantidad(stock - cantidad);
                double precio = cantidad * objpro.getPrecio();
                JOptionPane.showMessageDialog(this, "Ha comprado el producto a " + precio + " - Consulte su factura -", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                presenta(objpro);
                UtilTienda.generaFactura(objpro, cantidad);
            } else {
                JOptionPane.showMessageDialog(this, "No hay suficiente stock.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | IOException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al comprar: " + e.toString(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCompraActionPerformed

    private void jButtonModfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModfActionPerformed
        // TODO add your handling code here:
        try {
            String nombre = panelDatos.getJTextFieldNombre();
            double precio = Double.parseDouble(panelDatos.getJTextFieldPrecio());
            String var = panelDatos.getJTextFieldVar();
            if (UtilTienda.modificaProducto(objpro, nombre, precio, var)) {
                JOptionPane.showMessageDialog(this, "Producto modificado.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, " Error: - Producto no encontrado -", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al modificar: " + e.toString(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonModfActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnt;
    private javax.swing.JButton jButtonBaja;
    private javax.swing.JButton jButtonCompra;
    private javax.swing.JButton jButtonModf;
    private javax.swing.JButton jButtonReponer;
    private javax.swing.JButton jButtonSig;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextFieldCant;
    private presentacion.PanelDatos panelDatos;
    // End of variables declaration//GEN-END:variables
}
