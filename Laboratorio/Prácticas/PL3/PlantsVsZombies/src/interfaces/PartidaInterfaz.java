/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.CasillaVacia;
import clases.Objeto;
import clases.Tablero;
import static clases.Tablero.movimientos;
import static clases.Tablero.agregarZombie;
import com.sun.glass.events.KeyEvent;
import java.util.Scanner;
import javax.swing.ImageIcon;
import clases.ExcepcionJuego;
import clases.ExcepcionPlanta;
import clases.PlantaGirasol;
import clases.Planta;
import clases.PlantaLanzaGuisantes;
import clases.PlantaNuez;
import clases.PlantaPetaCereza;
import static clases.ExcepcionPlanta.comprarPlantas;
import static clases.ExcepcionPlanta.casillaOcupada;
import static clases.ExcepcionPlanta.fueraTablero;
import static clases.ExcepcionPlanta.ultimaColumna;
import static clases.ExcepcionJuego.imprimirLineaComandos;
import static clases.ExcepcionJuego.pedirInstruccion;
import clases.Historial;
import clases.MiExcepcion;
import clases.Usuario;
import clases.ZombieCaraCubo;
import clases.ZombieComun;
import clases.ZombieDeportista;
import java.awt.Image;
import java.util.HashMap;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author laura
 */
public class PartidaInterfaz extends javax.swing.JFrame {

    /**
     * Creates new form PartidaInterfaz
     */
    private static Usuario usuario;
    private static HashMap<String, clases.Historial> torneo;
    private static String dificultad = null;
    private static Objeto[][] tablero;
    private CasillaVacia casillaVacia;
    private int[] soles = {50};
    private int[] contadorTurno = {1};
    private int[] turnosInicialesSinZombis = {0};
    int[] contadorZombisQuedan = {0};
    int[] contadorZombis = {0};
    private int numZombies = 0;
    public int[] puntos = {0};
    boolean terminada = false;
    boolean ganada = false;

    public PartidaInterfaz(HashMap<String, clases.Historial> torne, Usuario usuari, String dificulta) {
        usuario = usuari;
        torneo = torne;
        dificultad = dificulta;
        initComponents();
        transparenciaBoton();
        this.setLocationRelativeTo(null);  //ajustarlo en el medio de la pantalla

        int[] turnosInicialesSinZombis = turnosSinZombies();
        int numZombies = numZombies();

        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icono.jpg")).getImage());  //cambiar logo
        casillaVacia = new CasillaVacia(0, 0, 0, 0);

        jLabel_turno_Partida.setText(Integer.toString(contadorTurno[0]));

        if (contadorZombisQuedan[0] == 0) {
            contadorZombisQuedan[0] = numZombies;
        }

        asignarNombreJLabel();
        tablero = Tablero.rellenarTableroInterfaz(5, 9, casillaVacia);
        jLabel_numSoles_Partida.setText(Integer.toString(soles[0]));
        textField_zmbQuedan.setText(Integer.toString(contadorZombisQuedan[0]));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir_Partida = new javax.swing.JButton();
        tablero_0_0 = new javax.swing.JLabel();
        tablero_0_1 = new javax.swing.JLabel();
        tablero_0_2 = new javax.swing.JLabel();
        tablero_0_3 = new javax.swing.JLabel();
        tablero_0_4 = new javax.swing.JLabel();
        tablero_0_5 = new javax.swing.JLabel();
        tablero_0_6 = new javax.swing.JLabel();
        tablero_0_7 = new javax.swing.JLabel();
        tablero_0_8 = new javax.swing.JLabel();
        tablero_1_0 = new javax.swing.JLabel();
        tablero_1_1 = new javax.swing.JLabel();
        tablero_1_2 = new javax.swing.JLabel();
        tablero_1_3 = new javax.swing.JLabel();
        tablero_1_4 = new javax.swing.JLabel();
        tablero_1_5 = new javax.swing.JLabel();
        tablero_1_6 = new javax.swing.JLabel();
        tablero_1_7 = new javax.swing.JLabel();
        tablero_1_8 = new javax.swing.JLabel();
        tablero_2_0 = new javax.swing.JLabel();
        tablero_2_1 = new javax.swing.JLabel();
        tablero_2_2 = new javax.swing.JLabel();
        tablero_2_3 = new javax.swing.JLabel();
        tablero_2_4 = new javax.swing.JLabel();
        tablero_2_5 = new javax.swing.JLabel();
        tablero_2_6 = new javax.swing.JLabel();
        tablero_2_7 = new javax.swing.JLabel();
        tablero_2_8 = new javax.swing.JLabel();
        tablero_3_0 = new javax.swing.JLabel();
        tablero_3_1 = new javax.swing.JLabel();
        tablero_3_2 = new javax.swing.JLabel();
        tablero_3_3 = new javax.swing.JLabel();
        tablero_3_4 = new javax.swing.JLabel();
        tablero_3_5 = new javax.swing.JLabel();
        tablero_3_6 = new javax.swing.JLabel();
        tablero_3_7 = new javax.swing.JLabel();
        tablero_3_8 = new javax.swing.JLabel();
        tablero_4_0 = new javax.swing.JLabel();
        tablero_4_1 = new javax.swing.JLabel();
        tablero_4_2 = new javax.swing.JLabel();
        tablero_4_3 = new javax.swing.JLabel();
        tablero_4_4 = new javax.swing.JLabel();
        tablero_4_5 = new javax.swing.JLabel();
        tablero_4_6 = new javax.swing.JLabel();
        tablero_4_7 = new javax.swing.JLabel();
        tablero_4_8 = new javax.swing.JLabel();
        textField_lineaComandos_Partida = new javax.swing.JTextField();
        textField_zmbQuedan = new javax.swing.JTextField();
        jLabel_turno_Partida = new javax.swing.JLabel();
        jLabel_numSoles_Partida = new javax.swing.JLabel();
        jLabelCostePLG = new javax.swing.JLabel();
        jLabelPG = new javax.swing.JLabel();
        jLabelCostePPC = new javax.swing.JLabel();
        jLabelCostePPC1 = new javax.swing.JLabel();
        fondoPartida = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonSalir_Partida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSalir_PartidaMouseClicked(evt);
            }
        });
        getContentPane().add(botonSalir_Partida, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, 110, 20));
        getContentPane().add(tablero_0_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 100, 130));

        tablero_0_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablero_0_1MouseClicked(evt);
            }
        });
        getContentPane().add(tablero_0_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 100, 130));

        tablero_0_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablero_0_2MouseClicked(evt);
            }
        });
        getContentPane().add(tablero_0_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 100, 130));
        getContentPane().add(tablero_0_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 100, 130));
        getContentPane().add(tablero_0_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 100, 130));
        getContentPane().add(tablero_0_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 100, 130));
        getContentPane().add(tablero_0_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 250, 100, 140));
        getContentPane().add(tablero_0_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 260, 100, 130));
        getContentPane().add(tablero_0_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(991, 266, 100, 130));
        getContentPane().add(tablero_1_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 100, 130));
        getContentPane().add(tablero_1_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 100, 130));
        getContentPane().add(tablero_1_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 100, 130));
        getContentPane().add(tablero_1_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 100, 130));
        getContentPane().add(tablero_1_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 100, 130));
        getContentPane().add(tablero_1_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, 100, 130));
        getContentPane().add(tablero_1_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 400, 100, 130));
        getContentPane().add(tablero_1_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 400, 100, 130));
        getContentPane().add(tablero_1_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 400, 100, 130));
        getContentPane().add(tablero_2_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 100, 130));
        getContentPane().add(tablero_2_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, 100, 130));
        getContentPane().add(tablero_2_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 550, 100, 130));
        getContentPane().add(tablero_2_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 540, 100, 130));
        getContentPane().add(tablero_2_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 540, 100, 130));
        getContentPane().add(tablero_2_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 550, 100, 130));
        getContentPane().add(tablero_2_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 550, 100, 130));
        getContentPane().add(tablero_2_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 550, 100, 130));
        getContentPane().add(tablero_2_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 550, 100, 130));
        getContentPane().add(tablero_3_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 686, 100, 130));
        getContentPane().add(tablero_3_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 690, 100, 130));
        getContentPane().add(tablero_3_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 690, 100, 130));
        getContentPane().add(tablero_3_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 700, 100, 130));
        getContentPane().add(tablero_3_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 690, 100, 130));
        getContentPane().add(tablero_3_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 690, 100, 130));
        getContentPane().add(tablero_3_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 690, 100, 130));
        getContentPane().add(tablero_3_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 690, 100, 130));
        getContentPane().add(tablero_3_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 690, 100, 130));
        getContentPane().add(tablero_4_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 830, 100, 130));
        getContentPane().add(tablero_4_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 840, 100, 130));
        getContentPane().add(tablero_4_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 840, 100, 130));
        getContentPane().add(tablero_4_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 840, 100, 130));
        getContentPane().add(tablero_4_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 830, 100, 130));
        getContentPane().add(tablero_4_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 840, 100, 130));
        getContentPane().add(tablero_4_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 830, 100, 130));
        getContentPane().add(tablero_4_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 830, 100, 130));
        getContentPane().add(tablero_4_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 830, 100, 130));

        textField_lineaComandos_Partida.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        textField_lineaComandos_Partida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textField_lineaComandos_Partida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textField_lineaComandos_PartidaKeyPressed(evt);
            }
        });
        getContentPane().add(textField_lineaComandos_Partida, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 12, 110, 30));

        textField_zmbQuedan.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        textField_zmbQuedan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textField_zmbQuedan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_zmbQuedanKeyTyped(evt);
            }
        });
        getContentPane().add(textField_zmbQuedan, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 83, 30));

        jLabel_turno_Partida.setFont(new java.awt.Font("Cooper Black", 0, 15)); // NOI18N
        jLabel_turno_Partida.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_turno_Partida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel_turno_Partida, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 60, 40, 20));

        jLabel_numSoles_Partida.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        jLabel_numSoles_Partida.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel_numSoles_Partida, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, 40));

        jLabelCostePLG.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabelCostePLG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCostePLG.setText("50");
        getContentPane().add(jLabelCostePLG, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 78, 70, 50));

        jLabelPG.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabelPG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPG.setText("20");
        getContentPane().add(jLabelPG, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 89, 50, 30));

        jLabelCostePPC.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabelCostePPC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCostePPC.setText("50");
        getContentPane().add(jLabelCostePPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 78, 60, 50));

        jLabelCostePPC1.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabelCostePPC1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCostePPC1.setText("50");
        getContentPane().add(jLabelCostePPC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 78, 60, 50));

        fondoPartida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoPartida.png"))); // NOI18N
        getContentPane().add(fondoPartida, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalir_PartidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSalir_PartidaMouseClicked
        // TODO add your handling code here:
        SalirJuego salirJuego = new SalirJuego(torneo, usuario, dificultad, tablero, puntos, terminada, ganada);
        salirJuego.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botonSalir_PartidaMouseClicked

    private void tablero_0_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablero_0_1MouseClicked
        // TODO add your handling code here:
        // hacer un dialog con la resistencia que queda
    }//GEN-LAST:event_tablero_0_1MouseClicked

    private void tablero_0_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablero_0_2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablero_0_2MouseClicked

    private void textField_zmbQuedanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_zmbQuedanKeyTyped
        // No admite el ingreso ni de letras ni de caracteres
        char c = evt.getKeyChar();
        if (c < 'a' || c > 'z' || c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_textField_zmbQuedanKeyTyped

    private void textField_lineaComandos_PartidaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_lineaComandos_PartidaKeyPressed
        // TODO add your handling code here
        String modoSeleccion = null;
        String posicionTablero = null;
        String[] listaLineaComandos;  //te mete cada palabra de la cadena como un element

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {  //enter
            listaLineaComandos = textField_lineaComandos_Partida.getText().split("\\s+");  //te mete cada palabra de la cadena como un element
            if (!ExcepcionJuego.comprobarInstruccion(listaLineaComandos)) { //está mal
                JOptionPane.showMessageDialog(this, "¡¡¡Instrucción no válida!!!");
                textField_lineaComandos_Partida.setText("");
            } else { //está bien
                textField_lineaComandos_Partida.setText("");
                if ("AYUDA".equals(listaLineaComandos[0].toUpperCase())) {

                    JOptionPane.showMessageDialog(this, "G <fila> <columna>: colocar girasol. \nL <fila> <columna>: colocar LanzaGuisantes. \nN <fila> <columna>: colocar Nuez. \nP <fila> <columna>: colocar PetaCereza. \nPASO : pasar turno.");
                    textField_lineaComandos_Partida.setText("");
                } else {
                    modoSeleccion = listaLineaComandos[0];
                    partida(listaLineaComandos, modoSeleccion, posicionTablero, soles, contadorTurno, turnosSinZombies(), numZombies(), contadorZombisQuedan, contadorZombis);
                }

            }

        }
    }//GEN-LAST:event_textField_lineaComandos_PartidaKeyPressed

    /**
     * Los botones serán transparentes
     */
    public void transparenciaBoton() {
        botonSalir_Partida.setOpaque(false);
        botonSalir_Partida.setContentAreaFilled(false);
        botonSalir_Partida.setBorderPainted(false);
    }

    /**
     * Asignamos nombre a los JLabels
     */
    public void asignarNombreJLabel() {
        tablero_0_0.setName("tablero_0_0");
        tablero_0_1.setName("tablero_0_1");
        tablero_0_2.setName("tablero_0_2");
        tablero_0_3.setName("tablero_0_3");
        tablero_0_4.setName("tablero_0_4");
        tablero_0_5.setName("tablero_0_5");
        tablero_0_6.setName("tablero_0_6");
        tablero_0_7.setName("tablero_0_7");
        tablero_0_8.setName("tablero_0_08");
        tablero_1_0.setName("tablero_1_0");
        tablero_1_1.setName("tablero_1_1");
        tablero_1_2.setName("tablero_1_2");
        tablero_1_3.setName("tablero_1_3");
        tablero_1_4.setName("tablero_1_4");
        tablero_1_5.setName("tablero_1_5");
        tablero_1_6.setName("tablero_1_6");
        tablero_1_7.setName("tablero_1_7");
        tablero_1_8.setName("tablero_1_8");
        tablero_2_0.setName("tablero_2_0");
        tablero_2_1.setName("tablero_2_1");
        tablero_2_2.setName("tablero_2_2");
        tablero_2_3.setName("tablero_2_3");
        tablero_2_4.setName("tablero_2_4");
        tablero_2_5.setName("tablero_2_5");
        tablero_2_6.setName("tablero_2_6");
        tablero_2_7.setName("tablero_2_7");
        tablero_3_0.setName("tablero_3_0");
        tablero_3_1.setName("tablero_3_1");
        tablero_3_2.setName("tablero_3_2");
        tablero_3_3.setName("tablero_3_3");
        tablero_3_4.setName("tablero_3_4");
        tablero_3_5.setName("tablero_3_5");
        tablero_3_6.setName("tablero_3_6");
        tablero_3_7.setName("tablero_3_7");
        tablero_3_8.setName("tablero_3_8");
        tablero_4_0.setName("tablero_4_0");
        tablero_4_1.setName("tablero_4_1");
        tablero_4_2.setName("tablero_4_2");
        tablero_4_3.setName("tablero_4_3");
        tablero_4_4.setName("tablero_4_4");
        tablero_4_5.setName("tablero_4_5");
        tablero_4_6.setName("tablero_4_6");
        tablero_4_7.setName("tablero_4_7");
        tablero_4_8.setName("tablero_4_8");

    }

    /**
     *
     * Asignar Imagen en función del tipo de planta y crear Planta
     *
     * @param posicion
     * @param comando
     */
    public void asignarImagen(JLabel posicion, Objeto objeto) {

        if (objeto instanceof PlantaGirasol) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\plantaGirasol.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof PlantaLanzaGuisantes) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\plantaLanzaGuisantes.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof PlantaNuez) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\plantaNuez.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof PlantaPetaCereza) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\plantaPetaCerezas.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof ZombieComun) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\zombieComun.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof ZombieCaraCubo) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\zombieCaraCubo.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof ZombieDeportista) {
            ImageIcon objetoImagen = new ImageIcon("src\\imagenes\\zombieDeportista.png");
            Icon icono = new ImageIcon(objetoImagen.getImage().getScaledInstance(posicion.getWidth(), posicion.getHeight(), Image.SCALE_DEFAULT));
            posicion.setIcon(icono);
        } else if (objeto instanceof CasillaVacia) {
            posicion.setIcon(null);
        }

    }

    /**
     *
     *  Crear plantas
     * 
     * @param comando
     * @return
     * 
     */
    public Planta crearPlanta(String comando) {
        comando = comando.toUpperCase();

        Planta planta = null;

        if (null != comando) {
            switch (comando) {
                case "L": {
                    planta = PlantaLanzaGuisantes.crearPlantaLanzaGuisantes();

                    break;
                }
                case "G": {
                    planta = PlantaGirasol.crearPlantaGirasol();
                    break;
                }
                case "N": {
                    planta = PlantaNuez.crearPlantaNuez();
                    break;
                }
                case "P": {
                    planta = PlantaPetaCereza.crearPlantaPetaCereza();
                    break;
                }
            }
        }
        return planta;
    }

    /**
     *
     * Agregar las fotos a los jlabels dependiendo del objeto y se asigna la resistencia
     * 
     * @param tablero
     * @param numFilas
     * @param numColumnas
     */
    public void objetosTablero(Objeto[][] tablero, int numFilas, int numColumnas) {

        for (int i = 0; i < numFilas; i++) {
            for (int j = 0; j < numColumnas; j++) {
                if (i == 0) {
                    if (j == 0) {
                        asignarImagen(tablero_0_0, tablero[i][j]);  //asignarImagen(JLabel posicion, Objeto objeto)
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 1) {
                        asignarImagen(tablero_0_1, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 2) {
                        asignarImagen(tablero_0_2, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 3) {
                        asignarImagen(tablero_0_3, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 4) {
                        asignarImagen(tablero_0_4, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 5) {
                        asignarImagen(tablero_0_5, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 6) {
                        asignarImagen(tablero_0_6, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 7) {
                        asignarImagen(tablero_0_7, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 8) {
                        asignarImagen(tablero_0_8, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    }

                } else if (i == 1) {
                    if (j == 0) {
                        asignarImagen(tablero_1_0, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 1) {
                        asignarImagen(tablero_1_1, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 2) {
                        asignarImagen(tablero_1_2, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 3) {
                        asignarImagen(tablero_1_3, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 4) {
                        asignarImagen(tablero_1_4, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 5) {
                        asignarImagen(tablero_1_5, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 6) {
                        asignarImagen(tablero_1_6, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 7) {
                        asignarImagen(tablero_1_7, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 8) {
                        asignarImagen(tablero_1_8, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    }

                } else if (i == 2) {
                    if (j == 0) {
                        asignarImagen(tablero_2_0, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 1) {
                        asignarImagen(tablero_2_1, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 2) {
                        asignarImagen(tablero_2_2, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 3) {
                        asignarImagen(tablero_2_3, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 4) {
                        asignarImagen(tablero_2_4, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 5) {
                        asignarImagen(tablero_2_5, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 6) {
                        asignarImagen(tablero_2_6, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 7) {
                        asignarImagen(tablero_2_7, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 8) {
                        asignarImagen(tablero_2_8, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    }

                } else if (i == 3) {
                    if (j == 0) {
                        asignarImagen(tablero_3_0, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 1) {
                        asignarImagen(tablero_3_1, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 2) {
                        asignarImagen(tablero_3_2, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 3) {
                        asignarImagen(tablero_3_3, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 4) {
                        asignarImagen(tablero_3_4, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 5) {
                        asignarImagen(tablero_3_5, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 6) {
                        asignarImagen(tablero_3_6, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 7) {
                        asignarImagen(tablero_3_7, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 8) {
                        asignarImagen(tablero_3_8, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    }

                } else if (i == 4) {
                    if (j == 0) {
                        asignarImagen(tablero_4_0, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 1) {
                        asignarImagen(tablero_4_1, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 2) {
                        asignarImagen(tablero_4_2, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 3) {
                        asignarImagen(tablero_4_3, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 4) {
                        asignarImagen(tablero_4_4, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 5) {
                        asignarImagen(tablero_4_5, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 6) {
                        asignarImagen(tablero_4_6, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 7) {
                        asignarImagen(tablero_4_7, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    } else if (j == 8) {
                        asignarImagen(tablero_4_8, tablero[i][j]);
                        //tablero = Tablero.rellenarTableroVirtual(tablero[i][j], i, j, tablero);
                    }

                }
            }
        }
    }

    /**
     *
     * Asignar el num Zombis que van a salir 
     * 
     * @return
     */
    public int numZombies() {
        int numZombis = 0;
        if ("BAJA".equals(dificultad)) {
            numZombis = 5;
        } else if ("MEDIA".equals(dificultad)) {
            numZombis = 15;
        } else if ("ALTA".equals(dificultad)) {
            numZombis = 25;
        } else if ("IMPOSIBLE".equals(dificultad)) {
            numZombis = 50;
        }
        return numZombis;
    }

    /**
     *
     * Asignar cuántos turnos libres vas a tener antes de que salga el primer zombie
     * 
     * @return
     */
    public int[] turnosSinZombies() {
        int[] turnosInicialesSinZombis = {0};
        if ("BAJA".equals(dificultad)) {
            turnosInicialesSinZombis[0] = 10;
        } else if ("MEDIA".equals(dificultad)) {
            turnosInicialesSinZombis[0] = 7;
        } else if ("ALTA".equals(dificultad)) {
            turnosInicialesSinZombis[0] = 5;
        } else if ("IMPOSIBLE".equals(dificultad)) {
            turnosInicialesSinZombis[0] = 5;
        }
        return turnosInicialesSinZombis;
    }

    /**
     *
     * Partida
     * 
     * @param listaLineaComandos
     * @param modoSeleccion
     * @param posicionTablero
     * @param soles
     * @param contadorTurno
     * @param turnosInicialesSinZombis
     * @param numZombis
     * @param contadorZombisQuedan
     * @param contadorZombis
     */
    public void partida(String[] listaLineaComandos, String modoSeleccion, String posicionTablero, int[] soles, int[] contadorTurno, int[] turnosInicialesSinZombis, int numZombis, int[] contadorZombisQuedan, int[] contadorZombis) {

        int filaObjeto = 0;
        int columnaObjeto = 0;
        int[] contadorZombiesTablero = {0};
        int[] contadorZombiesMuertos = {0};

        int numFilas = 5;
        int numColumnas = 9;

        jLabel_turno_Partida.setText(Integer.toString(contadorTurno[0]));

        textField_zmbQuedan.setText(Integer.toString(contadorZombisQuedan[0]));

        boolean finPartida = false;
        int zombisQuedan = 0;
        contadorTurno[0]++;
        int contadorPlantaLanzaGuisantes = 0;
        boolean comprobadorImprimir = true;
        modoSeleccion = listaLineaComandos[0].toUpperCase();

        if ("G".equals(modoSeleccion) || "L".equals(modoSeleccion) || "N".equals(modoSeleccion) || "P".equals(modoSeleccion)) {
            filaObjeto = Integer.parseInt(listaLineaComandos[1]) - 1;
            columnaObjeto = Integer.parseInt(listaLineaComandos[2]) - 1;
            posicionTablero = "tablero_" + Integer.toString(filaObjeto - 1) + "_" + Integer.toString(columnaObjeto - 1);
            Planta planta = crearPlanta(modoSeleccion);
            if (ExcepcionPlanta.fueraTableroInterfaz(numFilas, numColumnas, filaObjeto, columnaObjeto) == true) {  //fuera tablero
                JOptionPane.showMessageDialog(null, "Fuera del tablero.");
            } else {
                if (columnaObjeto == numColumnas - 1) { //última casilla
                    JOptionPane.showMessageDialog(null, "Última casilla reservada para zombies.");
                } else {
                    if (!(tablero[filaObjeto][columnaObjeto] instanceof CasillaVacia)) { //casilla OCUPADA
                        JOptionPane.showMessageDialog(null, "Casilla Ocupada.");
                    } else {
                        if (soles[0] - planta.getCoste() >= 0) {  //Sí suficientes soles
                            tablero = Tablero.agregarPlanta(tablero, soles, listaLineaComandos, numFilas, numColumnas, modoSeleccion);

                        } else {
                            JOptionPane.showMessageDialog(null, "No tienes suficientes soles.");
                        }

                    }
                }
            }
        }
        jLabel_numSoles_Partida.setText(Integer.toString(soles[0]));

        //zombies
        turnosInicialesSinZombis[0] = turnosInicialesSinZombis[0] - contadorTurno[0];
        tablero = Tablero.agregarZombie(tablero, numFilas, numColumnas, contadorZombis, contadorZombiesTablero, turnosInicialesSinZombis[0], numZombis, contadorZombisQuedan);
        //                             tablero, numFilas, numColumnas, contadorZombis, contadorZombiesTablero, turnosInicialesSinZombis, numZombis, contadorZombisQuedan

        //tablero[4][4] = ZombieComun.crearZombieComun();
        turnosInicialesSinZombis[0]--;
        objetosTablero(tablero, numFilas, numColumnas);

        //---------------------------------------------------------------------------------------
        zombisQuedan = numZombis - contadorZombis[0];
        if (comprobadorImprimir == true) {
            turnosInicialesSinZombis[0]--;
        } else {
            contadorTurno[0]--;
        }
        comprobadorImprimir = true;
        //---------------------------------------------------------------------------------------

        //finPartida == true
        if (ExcepcionJuego.finPartida(tablero, numFilas, numColumnas, contadorZombis[0], numZombis, contadorTurno[0]) == true) {
            System.out.println("contador zmb: " + contadorZombis[0]);
            System.out.println("nuum zmb:" + numZombis);
            if (contadorZombis[0] == numZombis) {
                JOptionPane.showMessageDialog(null, "Han ganado las PLANTAS!!!!");
                for (int i = 0; i < numFilas; i++) {
                    for (int j = 0; j < numColumnas; j++) {
                        if (tablero[i][j] instanceof Planta) {
                            puntos[0] = puntos[0] + tablero[i][j].getCoste();
                        }
                    }
                }
                puntos[0] = puntos[0] + soles[0];
                terminada = true;
                ganada = true;
            } else {
                JOptionPane.showMessageDialog(null, "Han ganado los ZOMBIES!!!!");
                terminada = true;
                ganada = false;
            }
            this.dispose();
        }

        //movimiento
        tablero = Tablero.movimientos(tablero, numFilas, numColumnas, soles, casillaVacia, contadorZombiesTablero, contadorZombiesMuertos);

        //---------------------------------------------------------------------------------------
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSalir_Partida;
    private javax.swing.JLabel fondoPartida;
    private javax.swing.JLabel jLabelCostePLG;
    private javax.swing.JLabel jLabelCostePPC;
    private javax.swing.JLabel jLabelCostePPC1;
    private javax.swing.JLabel jLabelPG;
    private javax.swing.JLabel jLabel_numSoles_Partida;
    private javax.swing.JLabel jLabel_turno_Partida;
    private javax.swing.JLabel tablero_0_0;
    private javax.swing.JLabel tablero_0_1;
    private javax.swing.JLabel tablero_0_2;
    private javax.swing.JLabel tablero_0_3;
    private javax.swing.JLabel tablero_0_4;
    private javax.swing.JLabel tablero_0_5;
    private javax.swing.JLabel tablero_0_6;
    private javax.swing.JLabel tablero_0_7;
    private javax.swing.JLabel tablero_0_8;
    private javax.swing.JLabel tablero_1_0;
    private javax.swing.JLabel tablero_1_1;
    private javax.swing.JLabel tablero_1_2;
    private javax.swing.JLabel tablero_1_3;
    private javax.swing.JLabel tablero_1_4;
    private javax.swing.JLabel tablero_1_5;
    private javax.swing.JLabel tablero_1_6;
    private javax.swing.JLabel tablero_1_7;
    private javax.swing.JLabel tablero_1_8;
    private javax.swing.JLabel tablero_2_0;
    private javax.swing.JLabel tablero_2_1;
    private javax.swing.JLabel tablero_2_2;
    private javax.swing.JLabel tablero_2_3;
    private javax.swing.JLabel tablero_2_4;
    private javax.swing.JLabel tablero_2_5;
    private javax.swing.JLabel tablero_2_6;
    private javax.swing.JLabel tablero_2_7;
    private javax.swing.JLabel tablero_2_8;
    private javax.swing.JLabel tablero_3_0;
    private javax.swing.JLabel tablero_3_1;
    private javax.swing.JLabel tablero_3_2;
    private javax.swing.JLabel tablero_3_3;
    private javax.swing.JLabel tablero_3_4;
    private javax.swing.JLabel tablero_3_5;
    private javax.swing.JLabel tablero_3_6;
    private javax.swing.JLabel tablero_3_7;
    private javax.swing.JLabel tablero_3_8;
    private javax.swing.JLabel tablero_4_0;
    private javax.swing.JLabel tablero_4_1;
    private javax.swing.JLabel tablero_4_2;
    private javax.swing.JLabel tablero_4_3;
    private javax.swing.JLabel tablero_4_4;
    private javax.swing.JLabel tablero_4_5;
    private javax.swing.JLabel tablero_4_6;
    private javax.swing.JLabel tablero_4_7;
    private javax.swing.JLabel tablero_4_8;
    private javax.swing.JTextField textField_lineaComandos_Partida;
    private javax.swing.JTextField textField_zmbQuedan;
    // End of variables declaration//GEN-END:variables
}
